#include <LiquidCrystal_I2C.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

// Adjust the address and dimensions according to your LCD
LiquidCrystal_I2C lcd(0x27, 16, 2); // Change the address (0x27) if needed, and adjust columns and rows

#define BLYNK_TEMPLATE_ID "TMPL60Q0JqAQz"
#define BLYNK_TEMPLATE_NAME "Smart Irrigation System"
#define BLYNK_AUTH_TOKEN "R8XBZm7VoIsWmYYa0RlgDCn6C5W5m2ZN"

char ssid[] = "NIROB";        // Enter your WiFi name
char pass[] = "12345678";     // Enter your WiFi password

#define sensor A0
#define waterPump D3

BlynkTimer timer;
bool Relay = 0;

void setup() {
  Serial.begin(9600);
  pinMode(waterPump, OUTPUT);
  digitalWrite(waterPump, HIGH);
  lcd.begin(); // Initialize the LCD without specifying columns and rows
  lcd.setBacklight(HIGH); // Turn on the backlight

  Blynk.begin(BLYNK_AUTH_TOKEN, ssid, pass, "blynk.cloud", 80);

  lcd.setCursor(1, 0);
  lcd.print("System Loading");
  for (int a = 0; a <= 15; a++) {
    lcd.setCursor(a, 1);
    lcd.print(".");
    delay(500);
  }
  lcd.clear();

  timer.setInterval(100L, soilMoistureSensor);
}

BLYNK_WRITE(V1) {
  Relay = param.asInt();

  if (Relay == 1) {
    digitalWrite(waterPump, LOW);
    lcd.setCursor(0, 1);
    lcd.print("Motor is ON ");
  } else {
    digitalWrite(waterPump, HIGH);
    lcd.setCursor(0, 1);
    lcd.print("Motor is OFF");
  }
}

void soilMoistureSensor() {
  int value = analogRead(sensor);
  value = map(value, 0, 1024, 0, 100);
  value = (value - 100) * -1;

  Blynk.virtualWrite(V0, value);
  lcd.setCursor(0, 0);
  lcd.print("Moisture :");
  lcd.print(value);
  lcd.print(" ");
}

void loop() {
  Blynk.run();
  timer.run();
}
